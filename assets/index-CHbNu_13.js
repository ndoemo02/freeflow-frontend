`+e.stack:JSON.stringify(e,null,2);class dL extends G.Component{constructor(t){super(t),this.state={hasError:!1,error:null}}static getDerivedStateFromError(t){return{hasError:!0,error:t}}render(){return this.state.hasError?l.jsxs("div",{className:"p-4 border border-red-500 rounded","data-matrix-id":"src/components/ErrorBoundary.tsx:26:8","data-matrix-name":"div","data-component-path":"src/components/ErrorBoundary.tsx","data-component-line":"26","data-component-file":"ErrorBoundary.tsx","data-component-name":"div","data-component-content":"%7B%22className%22%3A%22p-4%20border%20border-red-500%20rounded%22%7D",children:[l.jsx("h2",{className:"text-red-500","data-matrix-id":"src/components/ErrorBoundary.tsx:27:10","data-matrix-name":"h2","data-component-path":"src/components/ErrorBoundary.tsx","data-component-line":"27","data-component-file":"ErrorBoundary.tsx","data-component-name":"h2","data-component-content":"%7B%22className%22%3A%22text-red-500%22%7D",children:"Something went wrong."}),l.jsx("pre",{className:"mt-2 text-sm","data-matrix-id":"src/components/ErrorBoundary.tsx:28:10","data-matrix-name":"pre","data-component-path":"src/components/ErrorBoundary.tsx","data-component-line":"28","data-component-file":"ErrorBoundary.tsx","data-component-name":"pre","data-component-content":"%7B%22className%22%3A%22mt-2%20text-sm%22%7D",children:cL(this.state.error)})]}):this.props.children}}const lL=(e={})=>{const{onTranscriptComplete:t,autoSubmit:n=!1}=e,[a,o]=B.useState(!1),[r,i]=B.useState(""),[c,m]=B.useState(null),u=B.useRef(null),f=B.useRef(""),h="SpeechRecognition"in window||"webkitSpeechRecognition"in window;B.useEffect(()=>{if(!h)return;const w=window.SpeechRecognition||window.webkitSpeechRecognition;u.current=new w;const y=u.current;return y.lang="pl-PL",y.interimResults=!0,y.maxAlternatives=1,y.continuous=!1,y.onstart=()=>{o(!0),m(null)},y.onresult=b=>{let C="",N="";for(let P=0;P<b.results.length;P++){const j=b.results[P][0].transcript;b.results[P].isFinal?C+=j:N+=j}const S=C||N;console.log("VOICE HOOK DEBUG: Nowy transkrypt:",S),f.current=S,i(S)},y.onerror=b=>{m(`Błąd rozpoznawania: ${b.error}`),o(!1)},y.onend=()=>{console.log("VOICE HOOK DEBUG: Rozpoznawanie zakończone"),o(!1),n&&t&&setTimeout(()=>{const b=f.current.trim();console.log("VOICE HOOK DEBUG: Wysyłanie finalnego transkryptu:",b),b&&t(b)},100)},()=>{y&&y.stop()}},[h,n,t]);const x=B.useCallback(()=>{if(!h){m("Rozpoznawanie mowy nie jest wspierane w tej przeglądarce");return}if(u.current&&!a)try{console.log("VOICE HOOK DEBUG: Resetowanie stanu przed nowym nasłuchiwaniem"),f.current="",i(""),m(null),u.current.start()}catch{m("Nie udało się uruchomić rozpoznawania mowy")}},[h,a]),v=B.useCallback(()=>{u.current&&a&&u.current.stop()},[a]);return{isListening:a,transcript:r,isSupported:h,startListening:x,stopListening:v,error:c}},mL=()=>{const[e,t]=B.useState(null),[n,a]=B.useState(null),[o,r]=B.useState(!1),i=B.useCallback(async()=>{if(!("geolocation"in navigator))return a("Twoja przeglądarka nie obsługuje lokalizacji."),null;r(!0),a(null);try{const c=await new Promise((u,f)=>{navigator.geolocation.getCurrentPosition(u,f,{enableHighAccuracy:!0,timeout:6e3,maximumAge:25e3})}),m={latitude:c.coords.latitude,longitude:c.coords.longitude};return t(m),r(!1),m}catch(c){const u={1:"Brak zgody na lokalizację.",2:"Lokalizacja niedostępna.",3:"Przekroczono czas oczekiwania."}[c.code]||"Błąd lokalizacji.";return a(u),r(!1),null}},[]);return{coords:e,error:n,loading:o,getCurrentPosition:i}},pu=(((typeof import.meta<"u"&&import.meta.env&&import.meta.env.VITE_API_BASE)||"https://freeflow-backend.vercel.app").replace(/\/+$/,""))+"/api",uL="AIzaSyCO0kKndUNlmQi3B5mxy4dblg_8WYcuKuk",pL=()=>`search_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,hL=async e=>{const t=new URLSearchParams;e.query&&t.set("query",e.query),e.lat&&t.set("lat",e.lat.toString()),e.lng&&t.set("lng",e.lng.toString()),e.radius&&t.set("radius",e.radius.toString()),e.rankby&&t.set("rankby",e.rankby),e.keyword&&t.set("keyword",e.keyword),e.n&&t.set("n",e.n.toString()),t.set("language",e.language||"pl"),console.log("API DEBUG: Wysyłanie zapytania:",`${pu}/places?${t.toString()}`);const n=await fetch(`${pu}/places?${t.toString()}`,{method:"GET",headers:{Accept:"application/json"}});if(!n.ok){const r=await n.text();throw console.error("API DEBUG: Response error:",n.status,r),new Error(`Places API error: ${n.status} - ${r}`)}const a=await n.json();if(console.log("API DEBUG: Raw backend response:",a),!a.results||!Array.isArray(a.results))throw console.error("API DEBUG: Niepoprawny format odpowiedzi:",a),new Error("Invalid API response format");const o={status:"OK",total:a.results.length,results:a.results.map(r=>({name:r.name||"",rating:r.rating||0,votes:r.votes||r.user_ratings_total||0,address:r.address||r.formatted_address||r.vicinity||"",place_id:r.place_id||""}))};return console.log("API DEBUG: Normalized response:",o),o},lB=async e=>{const t=pL(),n=`[SESSION:${t}] ${e}`;console.log("API DEBUG: GPT zapytanie z session ID:",t);const a=await fetch(`${pu}/gpt`,{method:"POST",headers:{"Content-Type":"application/json","Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache"},body:JSON.stringify({prompt:n,session_id:t}),cache:"no-cache"});if(!a.ok)throw new Error(`GPT API error: ${a.status}`);return a.json()},Ar=async(e,t="nova")=>{try{console.log("TTS DEBUG: Trying backend TTS...");const n=await fetch(`${pu}/tts`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:e,voice:t})});if(n.ok){console.log("TTS DEBUG: Backend TTS success");const a=await n.blob(),o=URL.createObjectURL(a);await new Audio(o).play();return}else throw console.warn("TTS DEBUG: Backend TTS failed with status:",n.status),new Error(`TTS API error: ${n.status}`)}catch(n){console.warn("TTS DEBUG: Backend TTS error:",n.message);try{console.log("TTS DEBUG: Using Web Speech API fallback...");const a=new SpeechSynthesisUtterance(e);a.lang="pl-PL",a.rate=.9,a.pitch=1,a.volume=1;const r=speechSynthesis.getVoices().find(i=>i.lang.startsWith("pl"));r?(a.voice=r,console.log("TTS DEBUG: Using Polish voice:",r.name)):console.log("TTS DEBUG: No Polish voice found, using default"),speechSynthesis.speak(a),console.log("TTS DEBUG: Web Speech API started successfully")}catch(a){console.error("TTS DEBUG: Web Speech API also failed:",a)}}},fL=e=>{const t=e.trim(),n=/(pizzeria|pizze|pizza|restauracja|restauracje|kebab|sushi|hotel|nocleg|taxi)(.*?)(?:\bw\s+([A-ZĄĆĘŁŃÓŚŹŻ][a-ząćęłńóśźż]+(?:-[A-ZĄĆĘŁŃÓŚŹŻ][a-ząćęłńóśźż]+)*))?/i,a=t.match(n);if(!a)return null;const o=(a[1]||"").toLowerCase(),r=a[3]?` w ${a[3]}`:"";return((/restaurac/.test(o)?"restauracje":/pizz/.test(o)?"pizzeria":/(hotel|nocleg)/.test(o)?"hotel":/taxi/.test(o)?"taxi":o)+r).trim()},Mc=["warszawa","kraków","łódź","wrocław","poznań","gdańsk","szczecin","bydgoszcz","lublin","katowice","białystok","gdynia","częstochowa","radom","sosnowiec","toruń","kielce","gliwice","zabrze","bytom","olsztyn","rzeszów","ruda śląska","rybnik","tychy","dąbrowa górnicza","płock","elbląg","opole","wałbrzych","zakopane","malbork","tarnów","legnica","siedlce","włocławek","chełm","kalisz","koszalin","słupsk","piła","ostrów wielkopolski","gniezno","jaworzno","jastrzębie zdrój","jelenia góra","nowy sącz","konin","piotrków trybunalski","piekary śląskie","piekarach śląskich","świętochłowice","siemianowice śląskie","chorzów","będzin","mysłowice","zawiercie","bielsko-biała","bielsko biała"],mB=e=>{const t=e.toLowerCase(),n=r=>r.replace(/ą/g,"a").replace(/ć/g,"c").replace(/ę/g,"e").replace(/ł/g,"l").replace(/ń/g,"n").replace(/ó/g,"o").replace(/ś/g,"s").replace(/ź/g,"z").replace(/ż/g,"z"),a=n(t),o=t.match(/\bw\s+([a-ząćęłńóśźż]+(?:[\s-][a-ząćęłńóśźż]+)*)/i);if(o){const r=o[1].toLowerCase(),i=n(r);console.log("CITY DEBUG: Znaleziono wzorzec w [miasto]:",r),console.log("CITY DEBUG: Normalizowana nazwa:",i);let c=Mc.find(h=>h===r);if(c)return console.log("CITY DEBUG: Dokładne dopasowanie:",c),{found:!0,city:c};console.log("CITY DEBUG: Brak dokładnego dopasowania dla:",r);const u=Mc.map(n).indexOf(i);if(u>=0)return c=Mc[u],console.log("CITY DEBUG: Znormalizowane dopasowanie:",c),{found:!0,city:c};if(console.log("CITY DEBUG: Brak znormalizowanego dopasowania dla:",i),c=Mc.find(h=>h.includes(r)||r.includes(h)||n(h).includes(i)||i.includes(n(h))),c)return console.log("CITY DEBUG: Częściowe dopasowanie:",c),{found:!0,city:c};console.log("CITY DEBUG: Brak częściowego dopasowania"),console.log("CITY DEBUG: Sprawdzam dopasowania fonetyczne dla:",i);const f=[{pattern:/pieka.*śląsk/,city:"piekary śląskie"},{pattern:/warszaw/,city:"warszawa"},{pattern:/krakow/,city:"kraków"},{pattern:/lodz/,city:"łódź"},{pattern:/wroclaw/,city:"wrocław"},{pattern:/poznan/,city:"poznań"},{pattern:/gdansk/,city:"gdańsk"},{pattern:/bielsk.*bial/,city:"bielsko-biała"}];for(const{pattern:h,city:x}of f)if(console.log("CITY DEBUG: Testuję pattern:",h,"dla:",i),h.test(i))return console.log("CITY DEBUG: Fonetyczne dopasowanie:",x),{found:!0,city:x};console.log("CITY DEBUG: Brak fonetycznego dopasowania")}for(const r of Mc)if(t.includes(r)||a.includes(n(r)))return console.log("CITY DEBUG: Bezpośrednie dopasowanie:",r),{found:!0,city:r};return console.log("CITY DEBUG: Nie znaleziono miasta w tekście:",e),{found:!1}},xL=async e=>{try{console.log("GEOCODE DEBUG: Geokodowanie miasta:",e);const t=new URL("https://maps.googleapis.com/maps/api/geocode/json");t.searchParams.set("address",`${e}, Polska`),t.searchParams.set("language","pl"),t.searchParams.set("region","pl"),t.searchParams.set("key",uL);const a=await(await fetch(t.toString())).json();if(console.log("GEOCODE DEBUG: Odpowiedź API:",a),a.status==="OK"&&a.results&&a.results.length>0){const o=a.results[0].geometry.location,r={latitude:o.lat,longitude:o.lng};return console.log("GEOCODE DEBUG: Znalezione współrzędne:",r),r}else return console.warn("GEOCODE DEBUG: Brak wyników geokodowania dla:",e),null}catch(t){return console.error("GEOCODE DEBUG: Błąd geokodowania:",t),null}},uB=e=>{const t=e.toLowerCase();return["w okolicy","obok","w pobliżu","blisko","najbliższe","najbliżej","tutaj","tu","przy mnie","w okolice","koło mnie","niedaleko"].some(a=>t.includes(a))},gL=async e=>{const{data:t,error:n}=await Qe.from("orders").select(`
